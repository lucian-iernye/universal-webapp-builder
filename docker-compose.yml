x-args: &args
  PROJECT_NAME: ${COMPOSE_PROJECT_NAME}

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        <<: *args
    container_name: ${COMPOSE_PROJECT_NAME}-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - app-net

  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    networks:
      - app-net

  mysql-test:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}-mysql-test
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_TEST_DATABASE}
      MYSQL_USER: ${DB_TEST_USERNAME}
      MYSQL_PASSWORD: ${DB_TEST_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_TEST_ROOT_PASSWORD}
    volumes:
      - mysql-test-data:/var/lib/mysql
    ports:
      - "${DB_TEST_PORT}:3306"
    networks:
      - app-net

  redis:
    image: redis:7-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - app-net

  nginx:
    image: nginx:latest
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  mysql-data:
    name: ${COMPOSE_PROJECT_NAME}-mysql-data
  mysql-test-data:
    name: ${COMPOSE_PROJECT_NAME}-mysql-test-data
  redis-data:
    name: ${COMPOSE_PROJECT_NAME}-redis-data
